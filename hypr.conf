exec-once = waybar -c $PWD/waybar.conf

monitor = WL-1, 1920x1080, 0x0, 1
monitor = WL-2, 1200x800, 1920x0, 1
#monitor = WL-2, 1200x800, 0x1080, 1


plugin = $HOME/work/hyprscroller/hyprscroller.so

input {
    kb_layout = us
    kb_model =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    gaps_in = 80
    gaps_out = 20
    border_size = 15
    col.active_border = rgba(15439eff)
    col.inactive_border = rgba(595959ff)

    layout = scroller
}

plugin {
    scroller {
        col.freecolumn_border = rgba(9e1515ff)
    }
}

animations {
    enabled = yes
}

gestures {
    workspace_swipe = off
}

binds {
    allow_workspace_cycles = yes
}

debug {
    enable_stdout_logs = true
}

$mainMod = ALT

bind = $mainMod, Return, exec, kitty
bind = $mainMod SHIFT, X, exit,

# focus
bind = $mainMod, left, scroller:movefocus, l
bind = $mainMod, right, scroller:movefocus, r
bind = $mainMod, up, scroller:movefocus, u
bind = $mainMod, down, scroller:movefocus, d
bind = $mainMod, home, scroller:movefocus, begin
bind = $mainMod, end, scroller:movefocus, end
bind = $mainMod CTRL, left, scroller:movewindow, l
bind = $mainMod CTRL, right, scroller:movewindow, r
bind = $mainMod CTRL, up, scroller:movewindow, u
bind = $mainMod CTRL, down, scroller:movewindow, d
bind = $mainMod CTRL, home, scroller:movewindow, begin
bind = $mainMod CTRL, end, scroller:movewindow, end

# Change monitor focus
bind = $mainMod SHIFT, left, focusmonitor, l
bind = $mainMod SHIFT, right, focusmonitor, r
bind = $mainMod SHIFT, up, focusmonitor, u
bind = $mainMod SHIFT, down, focusmonitor, d

# workspaces
bind = $mainMod, Page_Up, workspace, r-1
bind = $mainMod, Page_Down, workspace, r+1

bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3

# window control
bind = $mainMod SHIFT, equal, scroller:resetheight
bind = $mainMod SHIFT, minus, scroller:toggleheight
bind = $mainMod, equal, scroller:cyclesize, next
bind = $mainMod, minus, scroller:cyclesize, prev
bind = $mainMod, C, scroller:alignwindow, c
bind = $mainMod, L, scroller:alignwindow, l
bind = $mainMod, R, scroller:alignwindow, r
bind = $mainMod SHIFT, F, togglefloating
bind = $mainMod, I, scroller:admitwindow
bind = $mainMod, O, scroller:expelwindow

bind = $mainMod, D, exec, hyprctl keyword general:layout dwindle
bind = $mainMod, S, exec, hyprctl keyword general:layout scroller

# Fullscreen submap
# will switch to a submap called fullscreen
bind = $mainMod, F, submap, fulscreen
# will start a submap called "fulscreen"
submap = fulscreen
# sets repeatable binds for resizing the active window
bind = , 0, fullscreen, 0
bind = , 1, fullscreen, 1
bind = , 2, fullscreen, 2
bind = , 3, fakefullscreen
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

# Resize submap
# will switch to a submap called resize
bind = $mainMod SHIFT, R, submap, resize
# will start a submap called "resize"
submap = resize
# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 100 0
binde = , left, resizeactive, -100 0
binde = , up, resizeactive, 0 -100
binde = , down, resizeactive, 0 100
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

# Fitwidth submap
# will switch to a submap called fitwidth
bind = $mainMod, T, submap, fitwidth
# will start a submap called "fiwidth"
submap = fitwidth
# sets repeatable binds for resizing the active window
bind = , up, scroller:fitwidth, active
bind = , down, scroller:fitwidth, all
bind = , right, scroller:fitwidth, toend
bind = , left, scroller:fitwidth, tobeg
bind = , t, scroller:fitwidth, visible
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

bind = $mainMod, Z, togglespecialworkspace, magic
bind = $mainMod SHIFT, Z, movetoworkspace, special:magic

bind = $mainMod, X, exit


